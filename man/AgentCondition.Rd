% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-AgentCondition.R
\name{AgentCondition}
\alias{AgentCondition}
\title{Create \verb{<AgentCondition>} objects}
\usage{
AgentCondition(
  location = sf::st_point(),
  grid_cell = sf::st_point(),
  timestep = NA_integer_,
  timestamp = as.Date(NA),
  body_mass = NA_real_,
  states_budget = list(),
  states_cost = list(),
  mortality_prob = NA_real_,
  alive = NA,
  track = sf::st_sf(timestamp = as.POSIXct(NA), geom = sf::st_sfc(sf::st_point()))
)
}
\arguments{
\item{location}{object of class \code{XY}, specifying the agent's spatial
coordinates at the end of the current time-step.}

\item{grid_cell}{object of class \code{XY}, representing the AOC's grid-cell
occupied by the agent.}

\item{timestep}{integer, indicating the current simulation time-step index.}

\item{timestamp}{a \verb{<POSIXct>} object, the date-time at the end of the current
time-step.}

\item{body_mass}{a \verb{<units>} object, defining the agent's body mass at the end
of the current time-step.}

\item{states_budget}{a named list, detailing the agent's time allocation
across the different behavioural/activity states during the time-step. Each
element (of type \verb{<units>}) is named after a specific state and stores the
duration (e.g. hours) the agent spent in that state.}

\item{states_cost}{a named list, specifying the energy costs (e.g. KJ/hr)
associated with each state defined in \code{state_budget}. List elements are of
type \verb{<units>}.}

\item{mortality_prob}{numeric, the probability of the agent dying within the
the current time-step (\emph{currently ignored}).}

\item{alive}{a logical value (\code{TRUE} if alive, \code{FALSE} if dead), indicating
whether the agent has survived the time-step.}

\item{track}{object of class \code{sf}, storing a time-series of location points
tracking the agent's movement within the current time-step.}

\item{energy_expenditure}{a \verb{<units>} object, representing the total energy
(e.g. KJ/g) expended across all states during the time-step.}

\item{foraging_success}{a \verb{<units>} object, the mass of prey (e.g. grams)
consumed by the agent in the current time-step.}

\item{mass_change_value}{a \verb{<units>} object, capturing the net change in the
agentâ€™s body mass (e.g., grams) over the current time-step.}
}
\description{
\code{AgentCondition()} is a helper function to construct instances of
\verb{[AgentCondition-class]} objects, which carries the status of an agent at the
end of a simulation \code{delta_time} (e.g. end of day).
}
