% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-AgentState.R
\docType{class}
\name{AgentState-class}
\alias{AgentState-class}
\title{\verb{<AgentState>}}
\description{
\code{AgentState} is an S4 class for specifying an agent's current state in terms
of spatio-temporal activity and physiological condition at the end of the
current simulation \code{time_step} (e.g. end of day). It stores information such
as body mass, activity budgets, energy expenditure metrics, survival status,
etc

Currently this is an "internal" class, i.e. it is not meant to be user-facing
}
\section{Slots}{

\describe{
\item{\code{location}}{object of class \code{XY}, specifying the agent's current location
(units/projection: TBD).}

\item{\code{grid_cell}}{object of class \code{XY}, indicating the spatial coordinates of
the grid-cell occupied by the agent}

\item{\code{timestep}}{integer, the index of current simulation time-step}

\item{\code{timestamp}}{a \code{POSIXct} object, the date-time at the end of the current
simulation time-step}

\item{\code{body_mass}}{an object of class \code{units}, the agent's current body mass}

\item{\code{activity_budget}}{named list, defining the agent's time-in-activity
budget in the current time-step. Each list element (of class \code{units})
represents an activity and the time the agent spends on it during this
time-step (units: hours/time-step).}

\item{\code{activity_costs}}{named list, specifying the energy costs (e.g. KJ/hr/g)
associated with each activity in argument \code{activity_budget}. List elements
should be of type \code{units}}

\item{\code{energy_expenditure}}{a \code{units} object, total energy (e.g. KJ/g) spent on
all activities by the end of the current time-step}

\item{\code{foraging_success}}{a \code{units} object, the mass of prey consumed per
time-step (units: g/time-step)}

\item{\code{mass_change_value}}{numeric, specifying the change in the agentâ€™s mass
over the time-step (units: g)}

\item{\code{mortality_prob}}{numeric, the probability of the agent dying within the
the current time-step}

\item{\code{alive}}{logical, indicating the agent's survival status (\code{TRUE} if
alive, \code{FALSE} if dead)}

\item{\code{track}}{object of class \code{sf}, containing time-location points that
represent the agent's movement in the current time-step}
}}

